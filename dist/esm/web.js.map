{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nimport type { PermissionState } from '@capacitor/core';\r\n\r\nimport type {\r\n  DeliveredNotifications,\r\n  EnabledResult,\r\n  ListChannelsResult,\r\n  LocalNotificationSchema,\r\n  LocalNotificationsPlugin,\r\n  PendingResult,\r\n  PermissionStatus,\r\n  ScheduleOptions,\r\n  ScheduleResult,\r\n} from './definitions';\r\n\r\nexport class LocalNotificationsWeb\r\n  extends WebPlugin\r\n  implements LocalNotificationsPlugin\r\n{\r\n  protected pending: LocalNotificationSchema[] = [];\r\n  protected deliveredNotifications: Notification[] = [];\r\n\r\n  async getDeliveredNotifications(): Promise<DeliveredNotifications> {\r\n    const deliveredSchemas = [];\r\n    for (const notification of this.deliveredNotifications) {\r\n      const deliveredSchema: LocalNotificationSchema = {\r\n        title: notification.title,\r\n        id: parseInt(notification.tag),\r\n        body: notification.body,\r\n      };\r\n      deliveredSchemas.push(deliveredSchema);\r\n    }\r\n    return {\r\n      notifications: deliveredSchemas,\r\n    };\r\n  }\r\n  async removeDeliveredNotifications(\r\n    delivered: DeliveredNotifications,\r\n  ): Promise<void> {\r\n    for (const toRemove of delivered.notifications) {\r\n      const found = this.deliveredNotifications.find(\r\n        n => n.tag === String(toRemove.id),\r\n      );\r\n      found?.close();\r\n      this.deliveredNotifications = this.deliveredNotifications.filter(\r\n        () => !found,\r\n      );\r\n    }\r\n  }\r\n  async removeAllDeliveredNotifications(): Promise<void> {\r\n    for (const notification of this.deliveredNotifications) {\r\n      notification.close();\r\n    }\r\n    this.deliveredNotifications = [];\r\n  }\r\n  async createChannel(): Promise<void> {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n\r\n  async deleteChannel(): Promise<void> {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n\r\n  async listChannels(): Promise<ListChannelsResult> {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n\r\n  async schedule(options: ScheduleOptions): Promise<ScheduleResult> {\r\n    if (!this.hasNotificationSupport()) {\r\n      throw this.unavailable('Notifications not supported in this browser.');\r\n    }\r\n\r\n    for (const notification of options.notifications) {\r\n      this.sendNotification(notification);\r\n    }\r\n\r\n    return {\r\n      notifications: options.notifications.map(notification => ({\r\n        id: notification.id,\r\n      })),\r\n    };\r\n  }\r\n\r\n  async getPending(): Promise<PendingResult> {\r\n    return {\r\n      notifications: this.pending,\r\n    };\r\n  }\r\n\r\n  async registerActionTypes(): Promise<void> {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n\r\n  async cancel(pending: ScheduleResult): Promise<void> {\r\n    this.pending = this.pending.filter(\r\n      notification =>\r\n        !pending.notifications.find(n => n.id === notification.id),\r\n    );\r\n  }\r\n\r\n  async areEnabled(): Promise<EnabledResult> {\r\n    const { display } = await this.checkPermissions();\r\n\r\n    return {\r\n      value: display === 'granted',\r\n    };\r\n  }\r\n\r\n  async requestPermissions(): Promise<PermissionStatus> {\r\n    if (!this.hasNotificationSupport()) {\r\n      throw this.unavailable('Notifications not supported in this browser.');\r\n    }\r\n\r\n    const display = this.transformNotificationPermission(\r\n      await Notification.requestPermission(),\r\n    );\r\n\r\n    return { display };\r\n  }\r\n\r\n  async checkPermissions(): Promise<PermissionStatus> {\r\n    if (!this.hasNotificationSupport()) {\r\n      throw this.unavailable('Notifications not supported in this browser.');\r\n    }\r\n\r\n    const display = this.transformNotificationPermission(\r\n      Notification.permission,\r\n    );\r\n\r\n    return { display };\r\n  }\r\n\r\n  protected hasNotificationSupport = (): boolean => {\r\n    if (!('Notification' in window) || !Notification.requestPermission) {\r\n      return false;\r\n    }\r\n\r\n    if (Notification.permission !== 'granted') {\r\n      // don't test for `new Notification` if permission has already been granted\r\n      // otherwise this sends a real notification on supported browsers\r\n      try {\r\n        new Notification('');\r\n      } catch (e) {\r\n        if (e.name == 'TypeError') {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  protected transformNotificationPermission(\r\n    permission: NotificationPermission,\r\n  ): PermissionState {\r\n    switch (permission) {\r\n      case 'granted':\r\n        return 'granted';\r\n      case 'denied':\r\n        return 'denied';\r\n      default:\r\n        return 'prompt';\r\n    }\r\n  }\r\n\r\n  protected sendPending(): void {\r\n    const toRemove: LocalNotificationSchema[] = [];\r\n    const now = new Date().getTime();\r\n\r\n    for (const notification of this.pending) {\r\n      if (\r\n        notification.schedule?.at &&\r\n        notification.schedule.at.getTime() <= now\r\n      ) {\r\n        this.buildNotification(notification);\r\n        toRemove.push(notification);\r\n      }\r\n    }\r\n\r\n    this.pending = this.pending.filter(\r\n      notification => !toRemove.find(n => n === notification),\r\n    );\r\n  }\r\n\r\n  protected sendNotification(notification: LocalNotificationSchema): void {\r\n    if (notification.schedule?.at) {\r\n      const diff = notification.schedule.at.getTime() - new Date().getTime();\r\n\r\n      this.pending.push(notification);\r\n      setTimeout(() => {\r\n        this.sendPending();\r\n      }, diff);\r\n      return;\r\n    }\r\n    this.buildNotification(notification);\r\n  }\r\n\r\n  protected buildNotification(\r\n    notification: LocalNotificationSchema,\r\n  ): Notification {\r\n    const localNotification = new Notification(notification.title, {\r\n      body: notification.body,\r\n      tag: String(notification.id),\r\n    });\r\n    localNotification.addEventListener(\r\n      'click',\r\n      this.onClick.bind(this, notification),\r\n      false,\r\n    );\r\n    localNotification.addEventListener(\r\n      'show',\r\n      this.onShow.bind(this, notification),\r\n      false,\r\n    );\r\n    localNotification.addEventListener(\r\n      'close',\r\n      () => {\r\n        this.deliveredNotifications = this.deliveredNotifications.filter(\r\n          () => !this,\r\n        );\r\n      },\r\n      false,\r\n    );\r\n    this.deliveredNotifications.push(localNotification);\r\n    return localNotification;\r\n  }\r\n\r\n  protected onClick(notification: LocalNotificationSchema): void {\r\n    const data = {\r\n      actionId: 'tap',\r\n      notification,\r\n    };\r\n    this.notifyListeners('localNotificationActionPerformed', data);\r\n  }\r\n\r\n  protected onShow(notification: LocalNotificationSchema): void {\r\n    this.notifyListeners('localNotificationReceived', notification);\r\n  }\r\n}\r\n"]}